// Package models contains the types for schema 'ms'.
package models

import (
	"ms/sun/base"
	"strconv"
)

// GENERATED BY XO. DO NOT EDIT.

func (c _StoreImpl) GetCommentById__(Id int) (*Comment, bool) {
	o, ok := RowCache.Get("Comment:" + strconv.Itoa(Id))
	if ok {
		if obj, ok := o.(*Comment); ok {
			return obj, true
		}
	}
	obj2, err := CommentById(base.DB, Id)
	if err == nil {
		return obj2, true
	}
	return nil, false
}

func (c _StoreImpl) GetFollowingListByUserId__(UserId int) (*FollowingList, bool) {
	o, ok := RowCache.Get("FollowingList:" + strconv.Itoa(UserId))
	if ok {
		if obj, ok := o.(*FollowingList); ok {
			return obj, true
		}
	}
	obj2, err := FollowingListByUserId(base.DB, UserId)
	if err == nil {
		return obj2, true
	}
	return nil, false
}

func (c _StoreImpl) GetFollowingListMemberById__(Id int) (*FollowingListMember, bool) {
	o, ok := RowCache.Get("FollowingListMember:" + strconv.Itoa(Id))
	if ok {
		if obj, ok := o.(*FollowingListMember); ok {
			return obj, true
		}
	}
	obj2, err := FollowingListMemberById(base.DB, Id)
	if err == nil {
		return obj2, true
	}
	return nil, false
}

func (c _StoreImpl) GetFollowingListMemberHistoryById__(Id int) (*FollowingListMemberHistory, bool) {
	o, ok := RowCache.Get("FollowingListMemberHistory:" + strconv.Itoa(Id))
	if ok {
		if obj, ok := o.(*FollowingListMemberHistory); ok {
			return obj, true
		}
	}
	obj2, err := FollowingListMemberHistoryById(base.DB, Id)
	if err == nil {
		return obj2, true
	}
	return nil, false
}

func (c _StoreImpl) GetLikeById__(Id int) (*Like, bool) {
	o, ok := RowCache.Get("Like:" + strconv.Itoa(Id))
	if ok {
		if obj, ok := o.(*Like); ok {
			return obj, true
		}
	}
	obj2, err := LikeById(base.DB, Id)
	if err == nil {
		return obj2, true
	}
	return nil, false
}

func (c _StoreImpl) GetMediaById__(Id int) (*Media, bool) {
	o, ok := RowCache.Get("Media:" + strconv.Itoa(Id))
	if ok {
		if obj, ok := o.(*Media); ok {
			return obj, true
		}
	}
	obj2, err := MediaById(base.DB, Id)
	if err == nil {
		return obj2, true
	}
	return nil, false
}

func (c _StoreImpl) GetMessageById__(Id int) (*Message, bool) {
	o, ok := RowCache.Get("Message:" + strconv.Itoa(Id))
	if ok {
		if obj, ok := o.(*Message); ok {
			return obj, true
		}
	}
	obj2, err := MessageById(base.DB, Id)
	if err == nil {
		return obj2, true
	}
	return nil, false
}

func (c _StoreImpl) GetMsgDeletedFromServerById__(Id int) (*MsgDeletedFromServer, bool) {
	o, ok := RowCache.Get("MsgDeletedFromServer:" + strconv.Itoa(Id))
	if ok {
		if obj, ok := o.(*MsgDeletedFromServer); ok {
			return obj, true
		}
	}
	obj2, err := MsgDeletedFromServerById(base.DB, Id)
	if err == nil {
		return obj2, true
	}
	return nil, false
}

func (c _StoreImpl) GetMsgReceivedToPeerById__(Id int) (*MsgReceivedToPeer, bool) {
	o, ok := RowCache.Get("MsgReceivedToPeer:" + strconv.Itoa(Id))
	if ok {
		if obj, ok := o.(*MsgReceivedToPeer); ok {
			return obj, true
		}
	}
	obj2, err := MsgReceivedToPeerById(base.DB, Id)
	if err == nil {
		return obj2, true
	}
	return nil, false
}

func (c _StoreImpl) GetMsgSeenByPeerById__(Id int) (*MsgSeenByPeer, bool) {
	o, ok := RowCache.Get("MsgSeenByPeer:" + strconv.Itoa(Id))
	if ok {
		if obj, ok := o.(*MsgSeenByPeer); ok {
			return obj, true
		}
	}
	obj2, err := MsgSeenByPeerById(base.DB, Id)
	if err == nil {
		return obj2, true
	}
	return nil, false
}

func (c _StoreImpl) GetNotificationById__(Id int) (*Notification, bool) {
	o, ok := RowCache.Get("Notification:" + strconv.Itoa(Id))
	if ok {
		if obj, ok := o.(*Notification); ok {
			return obj, true
		}
	}
	obj2, err := NotificationById(base.DB, Id)
	if err == nil {
		return obj2, true
	}
	return nil, false
}

func (c _StoreImpl) GetNotificationRemovedByNotificationId__(NotificationId int) (*NotificationRemoved, bool) {
	o, ok := RowCache.Get("NotificationRemoved:" + strconv.Itoa(NotificationId))
	if ok {
		if obj, ok := o.(*NotificationRemoved); ok {
			return obj, true
		}
	}
	obj2, err := NotificationRemovedByNotificationId(base.DB, NotificationId)
	if err == nil {
		return obj2, true
	}
	return nil, false
}

func (c _StoreImpl) GetPhoneContactById__(Id int) (*PhoneContact, bool) {
	o, ok := RowCache.Get("PhoneContact:" + strconv.Itoa(Id))
	if ok {
		if obj, ok := o.(*PhoneContact); ok {
			return obj, true
		}
	}
	obj2, err := PhoneContactById(base.DB, Id)
	if err == nil {
		return obj2, true
	}
	return nil, false
}

func (c _StoreImpl) GetPostById__(Id int) (*Post, bool) {
	o, ok := RowCache.Get("Post:" + strconv.Itoa(Id))
	if ok {
		if obj, ok := o.(*Post); ok {
			return obj, true
		}
	}
	obj2, err := PostById(base.DB, Id)
	if err == nil {
		return obj2, true
	}
	return nil, false
}

func (c _StoreImpl) GetRecommendUserById__(Id int) (*RecommendUser, bool) {
	o, ok := RowCache.Get("RecommendUser:" + strconv.Itoa(Id))
	if ok {
		if obj, ok := o.(*RecommendUser); ok {
			return obj, true
		}
	}
	obj2, err := RecommendUserById(base.DB, Id)
	if err == nil {
		return obj2, true
	}
	return nil, false
}

func (c _StoreImpl) GetSearchClickedById__(Id int) (*SearchClicked, bool) {
	o, ok := RowCache.Get("SearchClicked:" + strconv.Itoa(Id))
	if ok {
		if obj, ok := o.(*SearchClicked); ok {
			return obj, true
		}
	}
	obj2, err := SearchClickedById(base.DB, Id)
	if err == nil {
		return obj2, true
	}
	return nil, false
}

func (c _StoreImpl) GetSessionById__(Id int) (*Session, bool) {
	o, ok := RowCache.Get("Session:" + strconv.Itoa(Id))
	if ok {
		if obj, ok := o.(*Session); ok {
			return obj, true
		}
	}
	obj2, err := SessionById(base.DB, Id)
	if err == nil {
		return obj2, true
	}
	return nil, false
}

func (c _StoreImpl) GetTagById__(Id int) (*Tag, bool) {
	o, ok := RowCache.Get("Tag:" + strconv.Itoa(Id))
	if ok {
		if obj, ok := o.(*Tag); ok {
			return obj, true
		}
	}
	obj2, err := TagById(base.DB, Id)
	if err == nil {
		return obj2, true
	}
	return nil, false
}

func (c _StoreImpl) GetTagsPostById__(Id int) (*TagsPost, bool) {
	o, ok := RowCache.Get("TagsPost:" + strconv.Itoa(Id))
	if ok {
		if obj, ok := o.(*TagsPost); ok {
			return obj, true
		}
	}
	obj2, err := TagsPostById(base.DB, Id)
	if err == nil {
		return obj2, true
	}
	return nil, false
}

func (c _StoreImpl) GetUserById__(Id int) (*User, bool) {
	o, ok := RowCache.Get("User:" + strconv.Itoa(Id))
	if ok {
		if obj, ok := o.(*User); ok {
			return obj, true
		}
	}
	obj2, err := UserById(base.DB, Id)
	if err == nil {
		return obj2, true
	}
	return nil, false
}

func (c _StoreImpl) GetUserMetaInfoByUserId__(UserId int) (*UserMetaInfo, bool) {
	o, ok := RowCache.Get("UserMetaInfo:" + strconv.Itoa(UserId))
	if ok {
		if obj, ok := o.(*UserMetaInfo); ok {
			return obj, true
		}
	}
	obj2, err := UserMetaInfoByUserId(base.DB, UserId)
	if err == nil {
		return obj2, true
	}
	return nil, false
}

func (c _StoreImpl) GetUserPasswordByUserId__(UserId int) (*UserPassword, bool) {
	o, ok := RowCache.Get("UserPassword:" + strconv.Itoa(UserId))
	if ok {
		if obj, ok := o.(*UserPassword); ok {
			return obj, true
		}
	}
	obj2, err := UserPasswordByUserId(base.DB, UserId)
	if err == nil {
		return obj2, true
	}
	return nil, false
}
